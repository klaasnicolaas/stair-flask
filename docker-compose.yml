---
version: "3"

volumes:
  emqx_data:
    name: emqx_data

services:
  # MQTT broker
  emqx:
    image: emqx:5.8
    container_name: stair_challenge_emqx
    deploy:
      resources:
        limits:
          memory: 300M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx", "ctl", "status"]
      interval: 5s
      timeout: 25s
      retries: 5
    networks:
      - backend
    ports:
      - 1883:1883
      - 8083:8083
      - 8084:8084
      - 8883:8883
      - 18083:18083
    volumes:
      - ./emqx_data:/opt/emqx/data

  # MySQL Service
  mysql:
    image: mysql:latest
    deploy:
      resources:
        limits:
          memory: 400M
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      timeout: 10s
      start_period: 60s
      retries: 10
    ports:
      - ${DB_PORT}:3306
    networks:
      - backend
    volumes:
      - ./mysql:/var/lib/mysql

  # Flask app
  flask:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stair_challenge_dashboard
    restart: unless-stopped
    depends_on:
      emqx:
        condition: service_healthy
      mysql:
        condition: service_healthy
      nginx:
        condition: service_started
    networks:
      - backend
    environment:
      - FLASK_ENV=production
    ports:
      - 5000:5000
    volumes:
      - .:/app
    privileged: true

  # Nginx
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - 80:80
    networks:
      - backend
    volumes:
      - ./nginx:/etc/nginx/conf.d

networks:
  backend:
